%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 39 479 562 708 
%%LanguageLevel: 3
%%Creator: CorelDRAW
%%Title: Logo-Muehle.eps
%%CreationDate: Fri Nov 18 16:40:15 2011
%%For: Herry Felderer
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 3 def
%Build: CorelDRAW Version 14.0.0.653
%Color profile:  Generisches CMYK-Druckerprofil
/CorelIsEPS true def
%%BeginResource: procset wCorel14Dict 14.0 0
/wCorel14Dict 300 dict def wCorel14Dict begin
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2007 Corel Corporation
% All rights reserved.     v14 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel14Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
454.18167 510.54123 492.12624 549.04365 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
474.64328 520.99625 m
473.19335 519.31729 470.45509 516.03420 470.45509 513.89915 C
470.45509 512.14507 472.30583 512.14507 472.46683 512.14507 C
473.11087 512.14507 473.75546 512.37439 474.32098 512.60060 C
477.62419 513.97483 480.03987 516.03420 482.37732 518.09357 C
482.62054 518.24778 482.77814 518.40198 482.94227 518.40198 C
483.26457 518.40198 483.74816 518.01817 483.74816 517.56265 C
483.74816 516.56882 481.24998 514.89326 480.52687 514.35865 C
477.05868 511.91518 474.56419 510.54123 472.14454 510.54123 C
468.51959 510.54123 468.44050 513.44022 468.44050 514.12904 C
468.44050 514.89326 468.68003 515.65380 468.92381 516.41830 C
469.89014 518.47710 L
469.89014 518.47710 462.31654 510.61663 457.40296 510.61663 C
455.54882 510.61663 454.18167 511.76466 454.18167 513.74494 C
454.18167 514.73877 454.18167 516.71962 459.17433 523.36403 C
461.99480 527.09896 469.32803 535.72450 469.97235 536.48872 C
471.66180 538.31849 473.99868 538.39361 474.08117 538.39361 C
474.39950 538.39361 474.80400 538.31849 474.80400 537.86239 C
474.80400 537.55767 474.64328 537.40346 474.56419 537.24926 C
473.35465 535.57370 462.55975 523.43972 460.38387 520.76636 C
459.41754 519.54633 456.27534 515.72948 456.27534 513.74494 C
456.27534 513.28942 456.27534 512.14507 457.80718 512.14507 C
459.25654 512.14507 463.36564 514.35865 468.44050 519.16309 C
473.11087 523.51483 473.99868 524.58406 480.68447 532.74643 C
483.90860 536.56384 484.23090 537.02306 484.79641 537.40346 C
485.84183 538.08888 487.85641 538.39361 488.01770 538.39361 C
488.33660 538.39361 488.66173 538.31849 488.66173 537.78387 C
488.66173 537.55767 L
488.57981 537.24926 485.03622 533.20592 484.39219 532.44142 C
478.66932 525.87893 L
474.64328 520.99625 L
@c
483.34309 547.39956 m
483.34309 545.94964 481.73272 544.04079 479.87858 544.04079 C
479.23455 544.04079 477.94649 544.34636 477.94649 545.79912 C
477.94649 547.47808 479.55685 548.84863 481.08869 549.00283 C
482.37732 549.23272 483.34309 548.46879 483.34309 547.39956 C
@c
492.12624 547.32387 m
492.12624 545.94964 490.51587 544.04079 488.66173 544.04079 C
488.01770 544.04079 486.80816 544.34636 486.80816 545.79912 C
486.80816 547.47808 488.33660 548.84863 489.86816 549.00283 C
491.23843 549.23272 492.12624 548.46879 492.12624 547.32387 C
@c
F

@rax %Note: Object
481.16721 510.54123 532.88759 571.05780 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
502.43754 532.90063 m
505.17553 535.18989 510.25011 538.85310 513.71461 538.85310 C
516.61361 538.85310 516.77490 536.63953 516.77490 536.25912 C
516.77490 534.58016 515.24646 531.98589 512.98866 529.39191 C
511.86472 527.94198 505.74076 521.22557 504.44872 519.69713 C
503.00306 517.94249 501.06699 515.57811 501.06699 513.74494 C
501.06699 512.37439 502.19433 512.14507 502.83836 512.14507 C
503.56460 512.14507 506.70709 512.37439 512.82737 517.94249 C
512.98866 518.09357 513.39288 518.40198 513.79370 518.40198 C
514.11969 518.40198 514.35921 517.86737 514.35921 517.48356 C
514.35921 516.41830 507.10819 510.54123 502.67735 510.54123 C
500.74469 510.54123 499.05156 511.68557 499.05156 514.28296 C
499.05156 518.32658 501.79294 521.52746 505.89865 525.80409 C
514.84564 534.96000 514.76372 535.26529 514.84564 536.25912 C
514.84564 537.09846 513.95839 537.32494 513.47140 537.32494 C
508.47874 537.32494 494.54220 524.35417 487.12989 514.73877 C
484.23090 510.92447 482.29483 510.61663 481.81550 510.61663 C
481.32850 510.61663 481.16721 510.84595 481.16721 511.15096 C
481.16721 512.29928 486.16016 518.17238 487.69200 520.07754 C
495.10772 528.77792 506.30287 543.20485 513.71461 551.90183 C
524.99225 565.18072 529.99200 571.05780 532.08595 571.05780 C
532.64806 571.05780 532.88759 570.59830 532.88759 570.13937 C
532.88759 568.84422 530.95493 566.63008 530.23181 565.79046 C
529.82759 565.41005 515.00324 549.46233 512.18277 546.33005 C
508.31745 541.98142 496.79660 528.16819 497.20167 528.32239 C
497.35871 528.39808 501.54973 532.21209 502.43754 532.90063 C
@c
F

@rax %Note: Object
515.80857 510.54123 561.49115 571.43849 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
518.14545 513.74494 m
518.14545 513.59414 518.14545 512.22019 519.67389 512.22019 C
521.76756 512.22019 525.31455 514.73877 526.68539 515.80800 C
527.32942 516.26353 530.07080 518.93660 530.31090 518.93660 C
530.55071 518.93660 530.95493 518.55279 530.95493 518.09357 C
530.95493 516.71962 524.50894 511.15096 519.43408 510.54123 C
516.85398 510.54123 515.80857 512.29928 515.80857 514.35865 C
515.80857 518.01817 518.95134 522.52441 525.95858 531.52639 C
534.74173 542.97213 541.26595 550.68236 552.30378 563.73109 C
554.07543 565.79046 558.91049 571.43849 560.52085 571.43849 C
560.68554 571.43849 561.49115 571.43849 561.49115 570.67398 C
561.49115 570.29357 L
560.84315 567.31890 540.54312 545.87452 538.20624 542.97213 C
533.53162 537.24926 518.14545 517.86737 518.14545 513.74494 C
@c
F

@rax %Note: Object
532.24299 510.39043 561.32646 538.85310 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
535.14255 514.58457 m
535.14255 512.14507 537.47972 511.99087 538.76806 511.99087 C
543.28110 511.99087 547.30743 514.35865 550.93323 517.02803 C
550.93323 517.02803 553.27011 518.70331 553.35231 518.70331 C
553.59184 518.70331 553.91414 518.24778 553.91414 517.86737 C
553.91414 517.33276 553.27011 516.79814 552.79020 516.41830 C
548.92148 513.28942 544.00762 510.39043 538.44605 510.39043 C
533.53162 510.39043 532.24299 512.90901 532.24299 515.42391 C
532.24299 522.75090 547.22891 538.85310 557.62186 538.85310 C
559.31131 538.85310 561.32646 538.39361 561.32646 536.40964 C
561.32646 532.82551 554.88387 526.10882 540.13833 524.65946 C
538.36696 522.14060 535.14255 517.63776 535.14255 514.58457 C
@c
555.44598 531.60208 m
556.25131 532.36630 558.26646 534.12038 558.26646 535.79991 C
558.26646 537.24926 556.57332 537.24926 556.17250 537.24926 C
551.25836 537.24926 544.08614 529.31622 541.42696 526.33871 C
545.61798 527.09896 551.01515 528.01767 555.44598 531.60208 C
@c
F

@rax %Note: Object
234.33619 479.67619 486.93458 593.66608 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
429.70054 584.60683 m
423.49181 583.01688 419.29739 581.90343 411.06983 577.13329 C
397.47543 569.02564 390.93052 562.98416 355.85065 529.91603 C
332.52435 508.13546 321.27676 497.96135 309.36132 490.64854 C
303.15061 486.83140 291.73805 479.67619 266.89748 479.67619 C
252.96605 479.67619 234.33619 483.17499 234.33619 493.34910 C
234.33619 499.07509 239.87594 500.50431 241.38510 500.50431 C
243.23272 500.50431 243.56835 499.23269 244.07206 497.96135 C
247.26047 487.94485 256.65817 483.65433 268.74454 483.65433 C
279.81978 483.65433 289.72488 487.78724 297.44362 492.23849 C
308.52198 498.59887 314.89937 504.47906 343.09644 530.71115 C
379.34787 564.57411 388.74784 573.16167 418.95808 585.24094 C
405.53178 586.99219 392.77757 588.58214 378.00822 588.58214 C
368.94416 588.58214 356.35805 587.94491 346.11534 583.01688 C
337.05808 578.56564 330.50976 570.93449 330.50976 563.77928 C
330.50976 561.23631 331.34939 558.85181 332.68904 557.42287 C
334.03578 555.83291 334.20387 555.67162 334.20387 555.03751 C
334.20387 554.40000 333.52866 553.44756 332.35682 553.44756 C
329.66872 553.44756 323.12523 557.89880 323.12523 566.32507 C
323.12523 569.66287 324.46658 581.10860 340.41317 588.42113 C
350.14507 592.71307 360.71660 593.66608 369.44787 593.66608 C
375.65717 593.66608 382.03455 593.18957 388.24384 592.55178 C
390.42680 592.39616 425.33858 587.78702 427.01754 587.78702 C
430.20454 588.42113 433.39493 589.05865 436.58192 589.37726 C
439.26831 589.69559 442.11969 589.69559 444.80976 589.69559 C
447.49304 589.69559 449.84324 589.69559 449.84324 588.26324 C
449.84324 587.31109 449.17200 586.83090 443.96646 583.33578 C
440.77975 581.10860 435.74230 576.97569 431.54787 573.16167 C
413.08441 556.30885 356.01874 494.62016 356.01874 486.99213 C
356.01874 485.55978 357.19398 485.08384 357.86580 485.08384 C
359.20885 485.08384 361.55622 486.51279 367.26520 491.44365 C
375.32154 498.43786 386.56488 510.35953 405.70016 530.23465 C
417.61814 542.79354 439.10079 565.36923 457.39587 580.15559 C
463.77326 585.40224 472.83676 592.71307 480.22186 592.71307 C
484.24847 592.71307 486.93458 590.01109 486.93458 587.31109 C
486.93458 586.03635 486.43115 584.60683 485.75934 583.33578 C
483.57978 579.20343 476.86337 571.41043 465.61691 558.69392 C
451.01849 541.84110 L
441.45128 530.87187 415.93918 501.45676 415.93918 489.69269 C
415.93918 485.08384 419.63301 484.92255 420.80882 484.92255 C
424.83515 484.92255 433.05931 489.69269 438.76460 494.93906 C
440.61165 496.69030 441.11565 497.16652 441.95499 497.16652 C
443.12683 497.16652 443.12683 496.37140 443.12683 495.89490 C
443.12683 494.14394 441.45128 492.55370 438.93269 490.80614 C
432.05159 485.24145 425.50668 481.10854 416.10699 481.10854 C
412.58069 481.10854 403.34910 481.58504 403.34910 491.28265 C
403.34910 495.73389 405.19616 499.55131 406.87512 502.57020 C
413.75594 515.44828 426.51411 531.98249 454.70948 561.55521 C
468.13890 575.70463 469.65033 577.29458 475.18781 583.33578 C
476.35965 584.60683 478.20671 586.51569 478.20671 587.62630 C
478.20671 588.26324 477.70299 588.73975 476.86337 588.73975 C
475.01660 588.73975 469.81446 585.08334 467.80271 583.65099 C
452.52992 572.68233 431.21197 551.69660 410.90513 530.23465 C
404.18872 523.39833 397.64353 516.24312 391.09861 509.40680 C
386.22926 504.47906 381.36274 499.70920 376.49679 494.93906 C
367.43329 486.35490 361.22031 481.10854 354.50731 481.10854 C
349.30573 481.10854 346.28683 483.81222 346.28683 487.94485 C
346.28683 499.07509 376.49679 531.50598 388.74784 544.54110 C
412.24847 569.34397 422.31600 576.81468 434.57017 584.60683 C
429.70054 584.60683 L
@c
F

@rax %Note: Object
39.13937 512.84381 74.18494 541.15597 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
55.57408 516.12321 m
55.57408 516.04753 55.57408 514.52277 57.34545 514.52277 C
59.52189 514.52277 63.30869 516.88772 66.20910 519.33061 C
66.53140 519.63194 67.73896 520.70485 67.98047 520.70485 C
68.30277 520.70485 68.46406 520.24564 68.46406 519.94091 C
68.46406 518.56668 61.61726 512.91950 56.86413 512.91950 C
53.63972 512.91950 53.63972 515.66769 53.63972 515.97269 C
53.63972 517.34665 54.28375 518.56668 54.92835 519.71102 C
51.70706 516.81203 47.19572 512.84381 43.16740 512.84381 C
40.10570 512.84381 39.13937 515.05398 39.13937 517.11704 C
39.13937 525.20769 57.10422 541.15597 65.80460 541.15597 C
67.41524 541.15597 68.70529 540.54624 68.70529 538.86671 C
68.70529 538.17789 68.46406 537.49247 68.30277 536.88274 C
68.38356 537.18746 70.71902 539.78173 70.88145 539.93594 C
71.68677 540.46715 73.05591 540.46715 73.21663 540.46715 C
73.53893 540.46715 74.18494 540.39146 74.18494 540.08646 C
74.18494 538.71250 55.57408 520.01603 55.57408 516.12321 C
@c
41.87934 516.20230 m
41.87934 515.89701 41.87934 514.52277 43.40891 514.52277 C
49.69191 514.52277 66.28762 532.53043 66.28762 537.87288 C
66.28762 539.01723 65.72608 539.63093 64.35496 539.55184 C
58.31376 539.17200 41.87934 522.22961 41.87934 516.20230 C
@c
F

@rax %Note: Object
70.23543 512.91950 115.91405 573.81619 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
72.57260 516.12321 m
72.57260 515.97269 72.57260 514.59846 74.10274 514.59846 C
76.19811 514.59846 79.74113 517.11704 81.11197 518.18627 C
81.75628 518.64180 84.49427 521.31487 84.73748 521.31487 C
84.97928 521.31487 85.38208 520.93106 85.38208 520.47213 C
85.38208 519.09789 78.93609 513.52923 73.86123 512.91950 C
71.28397 512.91950 70.23543 514.67698 70.23543 516.73635 C
70.23543 520.39644 73.37764 524.90239 80.38573 533.90466 C
89.16831 545.35351 95.69282 553.06006 106.73093 566.10935 C
108.50372 568.16872 113.33735 573.81619 114.94772 573.81619 C
115.10901 573.81619 115.91405 573.81619 115.91405 573.05225 C
115.91405 572.67184 L
115.27002 569.69717 94.96828 548.25250 92.63282 545.35351 C
87.95877 539.63093 72.57260 520.24564 72.57260 516.12321 C
@c
F

@rax %Note: Object
86.74923 512.91950 117.20438 553.13575 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
103.58816 540.69676 m
106.24734 544.05496 108.90680 547.41288 111.32220 550.31244 C
112.21002 551.38110 113.73846 553.13575 116.15726 553.13575 C
116.47814 553.13575 116.71937 552.98494 116.71937 552.60113 C
116.71937 552.37493 116.63887 552.22072 116.47814 551.99140 C
115.10901 550.39096 108.66302 542.45083 107.13175 540.69676 C
116.39764 540.69676 L
116.88038 540.69676 117.20438 540.77528 117.20438 540.39146 C
117.20438 539.40132 116.47814 539.09631 115.75361 539.01723 C
105.84454 539.01723 L
101.73458 534.05887 98.83559 530.47106 95.37109 526.04362 C
93.51694 523.68293 89.00702 517.88126 89.00702 516.04753 C
89.00702 514.59846 90.21373 514.52277 90.69647 514.52277 C
93.11414 514.52277 97.62548 517.65165 100.36545 520.01603 C
101.08998 520.62605 101.17247 520.70485 101.49420 520.70485 C
101.97780 520.70485 101.97780 520.09143 101.97780 519.86183 C
101.97780 518.79600 99.72142 517.27124 98.02998 516.12321 C
96.01512 514.75266 93.27713 512.91950 90.29565 512.91950 C
87.39524 512.91950 86.74923 515.13307 86.74923 516.42822 C
86.74923 518.56668 88.03928 520.78025 89.65162 523.14463 C
92.14781 526.73244 97.86728 533.82898 102.13880 539.01723 C
96.01512 539.01723 L
95.85411 539.01723 95.29058 539.01723 95.29058 539.47672 C
95.29058 540.16214 96.17613 540.62107 96.98145 540.69676 C
103.58816 540.69676 L
@c
F

@rax %Note: Object
105.52082 512.76813 134.60372 541.23080 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
108.42180 516.96283 m
108.42180 514.52277 110.75669 514.36857 112.04532 514.36857 C
116.55836 514.36857 120.58668 516.73635 124.21020 519.40630 C
124.21020 519.40630 126.54737 521.08526 126.62787 521.08526 C
126.86967 521.08526 127.19197 520.62605 127.19197 520.24564 C
127.19197 519.71102 126.54737 519.17641 126.06435 518.79600 C
122.19902 515.66769 117.28346 512.76813 111.72501 512.76813 C
106.80945 512.76813 105.52082 515.28728 105.52082 517.80217 C
105.52082 525.12917 120.50617 541.23080 130.89940 541.23080 C
132.59055 541.23080 134.60372 540.77528 134.60372 538.78791 C
134.60372 535.20321 128.15972 528.48709 113.41616 527.03745 C
111.64450 524.51887 108.42180 520.01603 108.42180 516.96283 C
@c
128.72353 533.98035 m
129.52885 534.74400 131.54400 536.49865 131.54400 538.17789 C
131.54400 539.63093 129.85115 539.63093 129.44835 539.63093 C
124.53420 539.63093 117.36397 531.69449 114.70479 528.71698 C
118.89581 529.47723 124.29298 530.39594 128.72353 533.98035 C
@c
F

@rax %Note: Object
133.07187 488.42447 193.09181 553.89969 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
171.66246 527.72627 m
181.08794 536.88274 185.27726 540.92608 189.38778 540.92608 C
191.07723 540.92608 193.09181 540.08646 193.09181 538.10277 C
193.09181 537.03326 192.12548 536.49865 191.56195 536.49865 C
191.23965 536.49865 190.91735 536.72854 190.67613 536.95786 C
190.43461 537.26315 190.35411 537.71868 190.19282 538.02709 C
189.87052 538.48318 189.14400 538.94211 188.25817 538.94211 C
187.05061 538.94211 185.35776 537.79776 184.55244 537.18746 C
181.97518 535.35798 176.33509 529.78564 172.30706 525.74230 C
174.64195 519.09789 174.72444 515.51348 174.64195 514.90318 C
174.64195 501.09024 162.07625 488.42447 146.44687 488.42447 C
137.66372 488.42447 133.07187 493.30772 133.07187 498.49597 C
133.07187 503.30381 136.53694 506.28132 137.34142 506.28132 C
137.74649 506.28132 138.14731 505.97291 138.14731 505.51739 C
138.14731 504.98277 137.82501 504.67805 137.50271 504.37304 C
135.57005 502.53931 134.92602 500.70983 134.92602 498.49597 C
134.92602 493.45852 139.84016 490.10400 146.52539 490.10400 C
151.52173 490.10400 170.29389 493.38340 170.29389 512.61392 C
170.29389 516.42822 169.64787 519.94091 169.08378 522.91843 C
163.44539 517.95638 157.72394 512.91950 151.84403 512.91950 C
149.10605 512.91950 146.36438 514.21805 146.36438 517.72706 C
146.36438 522.45950 150.63449 525.81742 151.84403 526.73244 C
153.85861 528.25748 164.89474 534.43928 167.39291 535.88891 C
167.79572 540.92608 168.27846 545.96353 173.75811 550.77137 C
177.22261 553.82457 179.88009 553.89969 180.60463 553.89969 C
183.50561 553.89969 183.82791 551.68611 183.82791 550.69569 C
183.82791 544.51389 173.59710 537.79776 169.97159 535.35798 C
170.37241 532.30422 170.53342 531.38608 171.66246 527.72627 C
@c
167.39291 533.90466 m
165.21846 532.60951 163.12309 531.23528 160.94721 530.01184 C
156.19408 527.34274 149.42778 523.37452 149.42778 517.88126 C
149.42778 515.51348 151.11921 514.67698 152.64907 514.67698 C
155.14724 514.67698 157.56293 516.20230 158.93405 517.11704 C
163.28239 519.94091 166.34580 522.76422 168.76205 525.05348 C
167.39291 533.90466 L
@c
181.49244 550.08255 m
181.49244 550.31244 181.49244 552.06652 179.63830 552.06652 C
177.62343 552.06652 175.04646 549.85635 173.91883 548.48211 C
170.13260 544.28400 169.97159 540.46715 169.81030 537.41735 C
177.54463 542.22520 181.49244 547.03247 181.49244 550.08255 C
@c
F

@rax %Note: Object
197.20035 512.84381 232.24592 541.15597 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
197.20035 513.75883 m
197.44214 514.82806 200.66485 518.79600 202.03398 520.32076 C
205.97981 525.12917 212.42580 532.98964 216.53433 538.94211 C
211.54025 538.94211 L
211.13717 538.94211 210.81515 538.86671 210.81515 539.40132 C
210.81515 540.46715 211.86198 540.54624 212.26479 540.62107 C
219.27430 540.62107 L
219.51553 540.54624 219.99883 540.54624 219.99883 540.01134 C
219.99883 539.85742 220.07934 539.70605 219.91975 539.55184 C
217.82466 536.80706 215.89030 534.28847 212.34529 529.55631 C
217.66195 534.59348 218.22746 535.12809 220.56435 536.88274 C
225.07370 540.31635 227.33065 541.15597 229.42602 541.15597 C
230.14913 541.15597 232.24592 541.00176 232.24592 538.78791 C
232.24592 535.81351 229.34353 532.60951 224.34917 527.19165 C
221.69197 524.29266 216.53433 518.72088 216.53433 516.12321 C
216.53433 514.75266 217.74387 514.44425 218.38791 514.44425 C
219.03250 514.44425 219.91975 514.67698 220.96517 515.13307 C
223.22154 516.12321 225.31691 517.65165 227.73288 519.55682 C
228.94243 520.55065 229.10230 520.70485 229.26472 520.70485 C
229.50652 520.70485 229.82825 520.39644 229.82825 519.94091 C
229.82825 519.09789 228.69921 518.18627 228.13739 517.72706 C
225.23499 515.43780 221.28690 512.84381 217.90517 512.84381 C
215.97080 512.84381 214.52117 514.14236 214.52117 516.50731 C
214.52117 521.23578 218.71020 525.51241 222.65830 529.40183 C
229.02151 535.81351 230.39235 537.34167 230.39235 538.71250 C
230.39235 539.40132 229.82825 539.70605 229.10230 539.70605 C
223.94636 539.70605 208.96157 524.21386 204.53074 518.64180 C
203.64491 517.57257 202.83931 516.42822 201.95348 515.36239 C
200.98715 514.29345 199.13357 512.91950 197.76444 512.91950 C
197.44214 512.91950 197.20035 512.99461 197.20035 513.45411 C
197.20035 513.75883 L
@c
F

@rax %Note: Object
230.95417 512.76813 260.03877 541.23080 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
233.85487 516.96283 m
233.85487 514.52277 236.19033 514.36857 237.48038 514.36857 C
241.99172 514.36857 246.01975 516.73635 249.64526 519.40630 C
249.64526 519.40630 251.98271 521.08526 252.06350 521.08526 C
252.30444 521.08526 252.62476 520.62605 252.62476 520.24564 C
252.62476 519.71102 251.98271 519.17641 251.49798 518.79600 C
247.63209 515.66769 242.71824 512.76813 237.15808 512.76813 C
232.24280 512.76813 230.95417 515.28728 230.95417 517.80217 C
230.95417 525.12917 245.93953 541.23080 256.33304 541.23080 C
258.02391 541.23080 260.03877 540.77528 260.03877 538.78791 C
260.03877 535.20321 253.59307 528.48709 238.84951 527.03745 C
237.07757 524.51887 233.85487 520.01603 233.85487 516.96283 C
@c
254.15660 533.98035 m
254.96192 534.74400 256.97707 536.49865 256.97707 538.17789 C
256.97707 539.63093 255.28422 539.63093 254.88340 539.63093 C
249.96756 539.63093 242.79704 531.69449 240.13956 528.71698 C
244.32888 529.47723 249.72576 530.39594 254.15660 533.98035 C
@c
F

@rax %Note: Object
254.39839 512.91950 288.87987 540.77528 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
274.86142 523.37452 m
273.41178 521.69499 270.67238 518.41247 270.67238 516.27742 C
270.67238 514.52277 272.52454 514.52277 272.68554 514.52277 C
273.32957 514.52277 273.97559 514.75266 274.53912 514.97887 C
277.84233 516.35310 280.25858 518.41247 282.59546 520.47213 C
282.83726 520.62605 282.99827 520.78025 283.15899 520.78025 C
283.48129 520.78025 283.96630 520.39644 283.96630 519.94091 C
283.96630 518.94652 281.46813 517.27124 280.74189 516.73635 C
277.27739 514.29345 274.78091 512.91950 272.36324 512.91950 C
268.73773 512.91950 268.65865 515.81849 268.65865 516.50731 C
268.65865 517.27124 268.90044 518.03206 269.14195 518.79600 C
270.10828 520.85537 L
270.10828 520.85537 262.53524 512.99461 257.62110 512.99461 C
255.76753 512.99461 254.39839 514.14236 254.39839 516.12321 C
254.39839 517.11704 254.39839 519.09789 259.39304 525.74230 C
262.21294 529.47723 269.54277 538.10277 270.18680 538.86671 C
271.87994 540.69676 274.21682 540.77528 274.29732 540.77528 C
274.61962 540.77528 275.02243 540.69676 275.02243 540.24066 C
275.02243 539.93594 274.86142 539.78173 274.78091 539.63093 C
273.57279 537.95140 262.77506 525.81742 260.60258 523.14463 C
259.63625 521.92460 256.49376 518.10718 256.49376 516.12321 C
256.49376 515.66769 256.49376 514.52277 258.02192 514.52277 C
259.47326 514.52277 263.58378 516.73635 268.65865 521.54419 C
273.32957 525.89310 274.21682 526.96233 280.90261 535.12809 C
284.12589 538.94211 284.44762 539.40132 285.01172 539.78173 C
286.05997 540.46715 288.07483 540.77528 288.23584 540.77528 C
288.55814 540.77528 288.87987 540.69676 288.87987 540.16214 C
288.87987 539.93594 L
288.79795 539.63093 285.25493 535.58362 284.61033 534.82309 C
278.88945 528.25748 L
274.86142 523.37452 L
@c
F

@rax %Note: Object
285.09364 512.76813 314.17625 541.23080 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.85 0.30 1.00 0.40 null ] set_fill_color
287.99263 516.96283 m
287.99263 514.52277 290.32809 514.36857 291.61814 514.36857 C
296.12778 514.36857 300.15723 516.73635 303.78274 519.40630 C
303.78274 519.40630 306.11962 521.08526 306.20041 521.08526 C
306.44192 521.08526 306.76422 520.62605 306.76422 520.24564 C
306.76422 519.71102 306.11962 519.17641 305.63688 518.79600 C
301.76759 515.66769 296.85430 512.76813 291.29613 512.76813 C
286.38028 512.76813 285.09364 515.28728 285.09364 517.80217 C
285.09364 525.12917 300.07502 541.23080 310.46995 541.23080 C
312.16139 541.23080 314.17625 540.77528 314.17625 538.78791 C
314.17625 535.20321 307.73055 528.48709 292.98557 527.03745 C
291.21392 524.51887 287.99263 520.01603 287.99263 516.96283 C
@c
308.29408 533.98035 m
309.09770 534.74400 311.11257 536.49865 311.11257 538.17789 C
311.11257 539.63093 309.42312 539.63093 309.01861 539.63093 C
304.10504 539.63093 296.93339 531.69449 294.27562 528.71698 C
298.46409 529.47723 303.86183 530.39594 308.29408 533.98035 C
@c
F

@rax %Note: Object
141.03184 561.08665 497.49137 707.76709 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.10 0.25 1.00 0.00 null ] set_fill_color
482.93490 628.43187 m
485.35257 628.29383 486.13833 627.29546 484.25386 626.32687 C
481.16891 627.51005 L
483.87969 629.68932 485.48466 631.97802 491.27868 631.11203 C
491.29257 631.10665 491.72939 632.45735 491.82321 633.16970 C
493.28362 633.26523 494.55128 632.29238 495.86457 631.60016 C
497.49137 632.97581 L
493.93644 633.55493 487.23477 633.25757 487.19650 633.35650 C
479.26743 629.15102 469.85669 626.61458 460.86491 626.71011 C
460.21238 625.91641 459.65537 624.98976 458.70151 625.46428 C
457.99965 626.17351 457.34910 626.61657 456.69572 626.90513 C
455.39263 626.87877 454.17770 627.24472 452.95370 627.45109 C
452.95370 627.45109 446.67326 628.73830 443.67987 629.58926 C
441.61994 629.63745 L
439.15209 629.53512 436.68170 629.43846 436.32510 631.60157 C
434.76094 632.03613 L
434.89134 631.62652 L
434.48400 632.11039 L
427.79877 633.92060 L
423.42973 635.10435 418.68454 635.92639 414.35121 637.42932 C
410.10094 638.90249 406.02274 640.17156 402.05849 641.26091 C
395.30409 641.87943 388.64665 642.26098 382.10287 642.44693 C
382.47732 643.29335 382.59128 644.31808 382.35345 645.57780 C
380.51376 655.47921 365.00372 644.92668 361.33682 651.81628 C
360.72000 653.47852 360.04167 655.10277 359.27093 656.67543 C
357.12737 663.95055 375.69260 666.68287 369.81496 674.91581 C
363.91351 683.20687 354.25276 667.70050 347.97288 672.50013 C
345.82819 674.61506 341.97279 676.68151 343.13783 680.27556 C
345.19720 684.49946 351.83707 693.29537 345.76271 696.88318 C
336.84038 702.16271 334.54460 684.20324 326.77115 686.28104 C
325.09559 686.93556 323.38573 687.52488 321.65858 688.03569 C
314.47304 691.28362 324.68230 706.31631 314.34917 707.69140 C
304.06904 709.06025 309.44750 692.11729 301.73726 690.71187 C
298.57209 690.63534 294.35868 689.24863 292.27918 692.50082 C
290.23852 697.02066 287.84693 707.34444 281.00211 705.46394 C
270.95131 702.74296 283.37301 689.11427 276.64696 685.01622 C
274.96091 684.25228 273.32277 683.43676 271.74671 682.55943 C
264.34431 679.77780 259.51266 696.96624 251.50791 690.58148 C
243.46091 684.18283 260.70406 676.59987 256.31405 670.22844 C
254.16709 667.83458 252.50655 664.18923 248.66759 664.88939 C
244.08964 666.36709 234.11480 671.78013 230.95417 665.62243 C
226.32151 656.62214 245.43043 656.42428 244.08198 648.84529 C
243.56835 647.20346 243.12954 645.55030 242.77294 643.87474 C
240.11376 636.59083 223.26208 644.94765 222.89443 634.90337 C
222.51798 624.88942 239.84816 632.06702 242.06031 624.72926 C
242.48324 621.65962 244.29827 617.95701 241.15068 615.70998 C
237.67398 613.87200 228.95490 611.03565 228.33326 606.22526 C
227.44913 605.78702 226.57068 605.36750 225.69704 604.96838 C
220.60205 602.60457 215.40699 601.15578 213.44485 601.88343 C
209.23257 602.04671 203.15934 603.13635 197.11531 605.59909 C
188.28794 608.81329 168.16082 608.26677 157.40476 609.32976 C
141.37909 604.53383 140.48957 586.62425 141.19540 585.45099 C
145.70816 569.83635 155.95909 575.98838 175.72224 567.00765 C
165.09969 572.38243 189.06293 574.56170 204.85389 565.77373 C
211.19357 562.28683 218.78079 560.62063 228.06822 561.19918 C
237.69865 561.59263 249.84227 565.50104 256.31263 568.95676 C
270.70157 576.26306 278.08129 584.25931 289.21663 588.41348 C
294.72123 590.49751 298.35524 593.78825 303.50013 596.51717 C
318.61077 602.22869 329.01165 607.39994 335.37175 609.72293 C
336.27005 610.42932 346.18932 612.14315 352.40003 612.85380 C
359.33811 613.61518 366.38929 613.80085 373.74009 613.03323 C
381.46620 612.56041 390.15609 615.34460 398.72835 616.17203 C
404.64170 615.93987 409.73159 613.00743 414.51534 612.07200 C
421.84857 610.76239 429.33175 610.80321 436.57087 611.30098 C
434.90778 612.60463 425.35984 612.74381 417.49398 613.54517 C
412.25981 614.25836 421.51351 617.13099 425.55033 617.58850 C
427.51474 618.17783 427.56009 613.37650 429.50778 613.96724 C
432.77528 613.34617 436.68425 614.51802 440.75934 614.94973 C
442.90658 615.53452 441.03940 611.61647 442.34249 611.89002 C
450.62759 611.52888 456.77792 616.66696 461.00268 615.72444 C
464.44365 615.02173 467.56006 615.02258 470.82076 614.75357 C
472.81861 614.80375 474.89839 614.84457 476.65247 615.50872 C
479.69631 617.34614 L
486.96491 621.67153 492.38192 626.81017 496.32038 631.37537 C
495.86457 631.60016 L
493.02340 629.38488 488.76265 627.83320 482.93490 628.43187 C
@c
358.46334 642.27231 m
354.58441 642.10677 325.47827 640.44227 318.43077 638.90192 C
340.59487 659.91713 L
344.49534 663.61918 336.96227 670.56520 333.16214 666.95244 C
308.56309 643.62813 L
308.54438 676.59534 L
308.54069 681.77169 298.03436 681.77424 298.03436 676.59194 C
298.05335 643.62472 L
273.42907 666.92154 L
269.61335 670.52636 262.10409 663.57099 265.99975 659.87915 C
290.62545 636.57893 L
255.81883 636.56561 L
250.38028 636.56561 250.38340 626.61061 255.82422 626.61061 C
269.59550 626.61770 L
261.00255 623.83153 253.98000 621.07937 248.84164 618.73540 C
241.09342 646.47383 258.87090 675.64885 287.66976 683.49487 C
318.35225 691.85225 352.26028 673.50076 358.46334 642.27231 C
@c
F

@rax %Note: Object
242.19723 584.50252 266.51169 606.40129 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
261.86854 584.50252 m
254.35502 589.75427 L
246.84378 584.50252 L
249.79606 592.89647 L
242.19723 598.03994 L
251.53824 597.97332 L
254.35502 606.40129 L
257.17351 597.97332 L
266.51169 598.03994 L
258.91285 592.89647 L
261.86854 584.50252 L
@c
F

@rax %Note: Object
272.22690 602.99405 296.53398 624.89083 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
291.89083 602.99405 m
284.38101 608.24409 L
276.87005 602.99405 L
279.82375 611.38120 L
272.22690 616.52409 L
281.56450 616.45408 L
284.38101 624.89083 L
287.19638 616.45408 L
296.53398 616.52409 L
288.93713 611.38120 L
291.89083 602.99405 L
@c
F

@rax %Note: Object
303.40460 613.51172 327.71764 635.41077 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
320.12220 621.90227 m
323.07250 613.51172 L
315.56466 618.76318 L
308.05002 613.51172 L
311.00372 621.90227 L
303.40460 627.04602 L
312.74589 626.97883 L
315.56466 635.41077 L
318.38117 626.97883 L
327.71764 627.04602 L
320.12220 621.90227 L
@c
F

@rax %Note: Object
338.81471 618.20419 363.12576 640.10296 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
355.52891 626.59332 m
358.48460 618.20419 L
350.97335 623.45622 L
343.45984 618.20419 L
346.41014 626.59332 L
338.81471 631.73820 L
348.15090 631.67159 L
350.97335 640.10296 L
353.78617 631.67159 L
363.12576 631.73820 L
355.52891 626.59332 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel14Dict 14.0 0
%%EOF
